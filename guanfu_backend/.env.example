# ============================================================================
# 環境變數範例檔案
# ============================================================================
# 使用方式：
# 1. 複製此檔案為 .env.dev：cp .env.example .env.dev
# 2. 填入實際的設定值
# 3. 不要將 .env.dev 提交到 Git（已在 .gitignore 中排除）
# ============================================================================

# ----------------------------------------------------------------------------
# 應用程式設定
# ----------------------------------------------------------------------------

# 環境名稱：local（本地開發）、dev（開發環境）、prod（生產環境）
ENVIRONMENT=local

# 應用程式標題（顯示在 API 文件中）
APP_TITLE=花蓮光復救災平台 API

# 應用程式埠號（Docker 容器內使用）
PORT=8080

# 生產環境伺服器 URL（預設值已在 config.py 中設定，可選）
# PROD_SERVER_URL=https://guangfu250923.pttapp.cc

# LAN SERVER URL (如果伺服器是架在 LAN 上的主機)
LAN_SERVER_UTL=http://192.168.1.107

# ----------------------------------------------------------------------------
# 資料庫設定（PostgreSQL）
# ----------------------------------------------------------------------------

# PostgreSQL 使用者名稱
POSTGRES_USER=guanfu_user
DB_USER=guanfu_user

# PostgreSQL 密碼（請使用強密碼）
POSTGRES_PASSWORD=your_secure_password_here
DB_PASS=your_secure_password_here

# PostgreSQL 資料庫名稱
POSTGRES_DB=guanfu_db
DB_NAME=guanfu_db

# PostgreSQL 主機位址
# - 本地開發使用：localhost
# - Docker Compose 容器間連線使用：postgres（service name）
POSTGRES_HOST=localhost

# PostgreSQL 連接埠
POSTGRES_PORT=5432

# 完整的資料庫連線 URL
# 格式：postgresql://<user>:<password>@<host>:<port>/<database>
# 本地開發範例：
DATABASE_URL=postgresql://guanfu_user:your_secure_password_here@localhost:5432/guanfu_db
# Docker 容器內範例：
# DATABASE_URL=postgresql://guanfu_user:your_secure_password_here@postgres:5432/guanfu_db

# ----------------------------------------------------------------------------
# GCP Cloud SQL 設定（僅供 dev/prod 環境使用）
# ----------------------------------------------------------------------------

# Cloud SQL Instance 連線名稱
# 格式：project-id:region:instance-name
# 範例：guangfu-project:asia-east1:guanfu-db-instance
INSTANCE_CONNECTION_NAME=your-project:your-region:your-instance

# ----------------------------------------------------------------------------
# 其他設定（依需求新增）
# ----------------------------------------------------------------------------

# API 金鑰或密鑰（如需要）
# SECRET_KEY=your_secret_key_here

# CORS 設定（允許的來源，以逗號分隔）
# ALLOWED_ORIGINS=https://example.com,https://another.com

# 日誌等級（DEBUG、INFO、WARNING、ERROR、CRITICAL）
# LOG_LEVEL=INFO
