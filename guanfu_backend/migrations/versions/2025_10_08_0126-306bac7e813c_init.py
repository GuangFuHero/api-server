"""init

Revision ID: 306bac7e813c
Revises: 
Create Date: 2025-10-08 01:26:31.121596

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '306bac7e813c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accommodations',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('township', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('has_vacancy', sa.Enum('available', 'full', 'unknown', 'need_confirm', name='accommodationvacancyenum'), nullable=False),
    sa.Column('available_period', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('contact_info', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('pricing', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('status', sa.Enum('active', 'paused', 'ended', 'temporarily_closed', 'temporarily_unavailable', 'maintenance', 'out_of_service', 'completed', 'cancelled', name='generalstatusenum'), nullable=False),
    sa.Column('restrictions', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('room_info', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('coordinates', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('info_source', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('registration_method', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('facilities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('distance_to_disaster_area', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('human_resources',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('org', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sa.Enum('active', 'paused', 'ended', 'temporarily_closed', 'temporarily_unavailable', 'maintenance', 'out_of_service', 'completed', 'cancelled', name='generalstatusenum'), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('role_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('role_type', sa.Enum('general_volunteer', 'medical_staff', 'logistics', 'cleaning', 'admin_support', 'driver', 'security', 'professional', 'other', name='humanresourceroletypeenum'), nullable=False),
    sa.Column('headcount_need', sa.Integer(), nullable=False),
    sa.Column('headcount_got', sa.Integer(), nullable=False),
    sa.Column('role_status', sa.Enum('completed', 'pending', 'partial', name='humanresourcerolestatusenum'), nullable=False),
    sa.Column('has_medical', sa.Boolean(), nullable=True),
    sa.Column('skills', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('certifications', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('experience_level', sa.Enum('level_1', 'level_2', 'level_3', name='humanresourceexperiencelevelenum'), nullable=True),
    sa.Column('language_requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('headcount_unit', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('shift_start_ts', sa.BigInteger(), nullable=True),
    sa.Column('shift_end_ts', sa.BigInteger(), nullable=True),
    sa.Column('shift_notes', sa.Text(), nullable=True),
    sa.Column('assignment_timestamp', sa.BigInteger(), nullable=True),
    sa.Column('assignment_count', sa.Integer(), nullable=True),
    sa.Column('assignment_notes', sa.Text(), nullable=True),
    sa.Column('pii_date', sa.BigInteger(), nullable=False),
    sa.Column('valid_pin', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_stations',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('station_type', sa.Enum('self_organized', 'fixed_point', 'shelter_medical', name='medicalstationtypeenum'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('status', sa.Enum('active', 'paused', 'ended', 'temporarily_closed', 'temporarily_unavailable', 'maintenance', 'out_of_service', 'completed', 'cancelled', name='generalstatusenum'), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('detailed_address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('contact_person', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('services', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('operating_hours', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('equipment', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('medical_staff', sa.Integer(), nullable=True),
    sa.Column('daily_capacity', sa.Integer(), nullable=True),
    sa.Column('coordinates', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('affiliated_organization', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('link', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mental_health_resources',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('duration_type', sa.Enum('temporary', 'long_term', 'both', name='mentalhealthdurationenum'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('service_format', sa.Enum('onsite', 'phone', 'online', 'hybrid', name='mentalhealthformatenum'), nullable=False),
    sa.Column('service_hours', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('contact_info', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('active', 'paused', 'ended', 'temporarily_closed', 'temporarily_unavailable', 'maintenance', 'out_of_service', 'completed', 'cancelled', name='generalstatusenum'), nullable=False),
    sa.Column('emergency_support', sa.Boolean(), nullable=False),
    sa.Column('website_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('target_audience', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('specialties', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('languages', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('coordinates', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('waiting_time', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('location_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('location_type', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restrooms',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('facility_type', sa.Enum('mobile_toilet', 'permanent_toilet', 'public_restroom', name='restroomfacilitytypeenum'), nullable=False),
    sa.Column('opening_hours', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('has_water', sa.Boolean(), nullable=False),
    sa.Column('has_lighting', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('active', 'paused', 'ended', 'temporarily_closed', 'temporarily_unavailable', 'maintenance', 'out_of_service', 'completed', 'cancelled', name='generalstatusenum'), nullable=False),
    sa.Column('coordinates', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('male_units', sa.Integer(), nullable=True),
    sa.Column('female_units', sa.Integer(), nullable=True),
    sa.Column('unisex_units', sa.Integer(), nullable=True),
    sa.Column('accessible_units', sa.Integer(), nullable=True),
    sa.Column('cleanliness', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('last_cleaned', sa.BigInteger(), nullable=True),
    sa.Column('facilities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('distance_to_disaster_area', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('info_source', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shelters',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('link', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('status', sa.Enum('open', 'full', 'closed', 'temporary_closed', name='shelterstatusenum'), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('current_occupancy', sa.Integer(), nullable=True),
    sa.Column('available_spaces', sa.Integer(), nullable=True),
    sa.Column('facilities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('contact_person', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('coordinates', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('opening_hours', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shower_stations',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('facility_type', sa.Enum('mobile_shower', 'coin_operated', 'regular_bathroom', name='showerfacilitytypeenum'), nullable=False),
    sa.Column('time_slots', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('available_period', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('active', 'paused', 'ended', 'temporarily_closed', 'temporarily_unavailable', 'maintenance', 'out_of_service', 'completed', 'cancelled', name='generalstatusenum'), nullable=False),
    sa.Column('requires_appointment', sa.Boolean(), nullable=False),
    sa.Column('coordinates', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('gender_schedule', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('pricing', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('info_source', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('facilities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('distance_to_guangfu', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('contact_method', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplies',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('pii_date', sa.BigInteger(), nullable=False),
    sa.Column('valid_pin', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('volunteer_organizations',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('registration_status', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('organization_nature', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('organization_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('coordinator', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('contact_info', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('registration_method', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('service_content', sa.Text(), nullable=True),
    sa.Column('meeting_info', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('water_refill_stations',
    sa.Column('created_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('water_type', sa.Enum('drinking_water', 'bottled_water', 'filtered_water', name='watertypeenum'), nullable=False),
    sa.Column('opening_hours', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('active', 'paused', 'ended', 'temporarily_closed', 'temporarily_unavailable', 'maintenance', 'out_of_service', 'completed', 'cancelled', name='generalstatusenum'), nullable=False),
    sa.Column('accessibility', sa.Boolean(), nullable=False),
    sa.Column('coordinates', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('container_required', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('daily_capacity', sa.Integer(), nullable=True),
    sa.Column('water_quality', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('facilities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('distance_to_disaster_area', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('info_source', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supply_items',
    sa.Column('total_number', sa.Integer(), nullable=False),
    sa.Column('tag', sa.Enum('food', 'medical_supplies', 'groceries', 'machinery', 'equipment', 'plumber', 'other', name='supplyitemtypeenum'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('received_count', sa.Integer(), nullable=True),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('supply_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['supply_id'], ['supplies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supply_items')
    op.drop_table('water_refill_stations')
    op.drop_table('volunteer_organizations')
    op.drop_table('supplies')
    op.drop_table('shower_stations')
    op.drop_table('shelters')
    op.drop_table('restrooms')
    op.drop_table('reports')
    op.drop_table('mental_health_resources')
    op.drop_table('medical_stations')
    op.drop_table('human_resources')
    op.drop_table('accommodations')
    # ### end Alembic commands ###
